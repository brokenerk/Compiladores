bool G() {
	if(ListaReglas())
		return true;
	return false;
}

bool ListaReglas() {
	int Token;
	if(Regla()) {
		Token = Lexic.geToken();
		if(Token == PC) {
			if(ListaReglasP()) {
				return true;
			}
		}
		return false;
	}
	return false;
}

bool ListaReglasP() {
	EdoAnaliz E;
	int Token;
	E = Lexic.getEdoAnalizador();
	if(Regla()) {
		Token = Lexic.getToken();
		if(Token == PC) {
			if(ListaReglasP()) {
				return true;
			}
		}
		return false;
	}
	Lexic.setEdoAnalizador(E);
	return true;
}

bool Regla() {
	int Token;
	String ladoI;
	if(LadoIzquierdo(ladoI)) {
		Token = Lexic.getToken();
		if(Token == FLECHA)
			if(LadosDerechos(ladoI)) 
				return true;
	}
	return false;
}

bool LadoIzquierdo(String s) {
	int Token;
	Token = Lexic.getToken();
	if(Token == SIMBOLO) {
		s = Lexic.getLexema();
		return true;
	}
	return false;
}

bool LadosDerechos(String s) {
	Nodo N;
	if(ListaSimbolos(N)) {
		ArrReglas[IndiceArr].simb = s;
		ArrReglas[IndiceArr].Ap = N;
		IndiceArr++;
		if(LadosDerechosP(s))
			return true;
	}
	return false;
}

bool LadosDerechosP(String s) {
	int Token;
	Nodo N;
	Token = Lexic.getToken();
	if(Token == OR) {
		if(ListaSimbolos(N)) {
			ArrReglas[IndiceArr].simb = s;
			ArrReglas[IndiceArr].Ap = N;
			IndiceArr++;
			if(LadosDerechosP(s)) {
				return true;
			}
		}
		return false;
	}
	Lexic.regresarToken();
	return true;
}

bool ListaSimbolos(Nodo N) {
	int Token;
	Nodo N2;
	Token = Lexic.getToken();
	
	if(Token == SIMBOLO) {
		Nodo N = new Nodo(Lexic.getLexema());
		if(ListaSimbolosP(N2)) {
			N.sig = N2;
			return true;
		}
	}
	return false;
}

bool ListaSimbolosP(Nodo N) {
	int Token;
	Nodo N2;
	Token = Lexic.getToken();

	if(Token == SIMBOLO) {
		Nodo N = new Nodo(Lexic.getLexema());
		if(ListaSimbolosP(N2)) {
			N.sig = N2;
			return true;
		}
	}
	N = NULL;
	Lexic.regresarToken();
	return false;
}